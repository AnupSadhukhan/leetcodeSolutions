class Solution {
    public boolean isBipartite(int[][] graph) {
       
       
        int[] colors=new int[graph.length];
        Queue<Integer> queue=new LinkedList<Integer>();
        
        for(int i=0;i<graph.length;i++){
            if(colors[i]==0){
                 queue.offer(i);
                colors[i]=1;
            }
           
         int curColor;
             while(!queue.isEmpty()){
            int node=queue.poll();
            curColor=colors[node]==1?-1:1;
            for(int n : graph[node]){
                if(colors[n]!=0 && colors[n]!=curColor) return false;
                if(colors[n]==0){
                    colors[n]=curColor;
                    queue.offer(n);
                }
                
            }
        }
        }
       
        return true;
    }
}
